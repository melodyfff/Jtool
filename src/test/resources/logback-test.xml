<?xml version="1.0" encoding="UTF-8"?>
<!--scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
<!--scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
<!--debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!--<property> : 用来定义变量值，它有两个属性name和value，通过<property>定义的值会被插入到logger上下文中，可以使“${}”来使用变量。-->
    <property name="AppName" value="J-tool"/>

    <property name="CONSOLE_LOG_PATTERN"
              value="%highlight(%d{yyyy-MM-dd HH:mm:ss.SSS})|-%highlight(%-5level)| %boldYellow(%thread)| %green(%logger{36}) - %cyan(%msg%n)"/>

    <property name="FILE_PATH" value="/opt/applog/jtool"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|-%-5level| %thread| %logger{36} - %msg%n"/>

    <!--<contextName> : 设置上下文名称，每个logger都关联到logger上下文，默认上下文名称为default-->
    <contextName>${AppName}</contextName>

    <!--<appender> ：负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
        </encoder>
    </appender>

    <!--&lt;!&ndash; 保存日志到本地 &ndash;&gt;-->
    <!--<appender name="FILE" class="ch.qos.logback.core.FileAppender">-->
        <!--<file>${FILE_PATH}/LOG.log</file>-->
        <!--&lt;!&ndash;<append>：如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。&ndash;&gt;-->
        <!--<append>true</append>-->
        <!--<encoder>-->
            <!--<pattern>${FILE_LOG_PATTERN}</pattern>-->
        <!--</encoder>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 每天生成日志 &ndash;&gt;-->
    <!--<appender name="FILE_DAY" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<file>${FILE_PATH}/LOG_info.log</file>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${FILE_PATH}/LOG_info.%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <!--<maxHistory>30</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--<encoder>-->
            <!--<pattern>${FILE_LOG_PATTERN}</pattern>-->
        <!--</encoder>-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<MaxFileSize>5MB</MaxFileSize>-->
        <!--</triggeringPolicy>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 只输出ERROR级别日志 &ndash;&gt;-->
    <!--<appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<file>${FILE_PATH}/LOG_error.log</file>-->
        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
            <!--<level>ERROR</level>-->
        <!--</filter>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${FILE_PATH}/LOG_info.%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <!--<maxHistory>30</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--<encoder>-->
            <!--<pattern>${FILE_LOG_PATTERN}</pattern>-->
        <!--</encoder>-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<MaxFileSize>5MB</MaxFileSize>-->
        <!--</triggeringPolicy>-->
    <!--</appender>-->



    <!--<logger name="com.xinchen.java.tools" level="INFO">-->
        <!--<appender-ref ref="FILE_DAY"/>-->
        <!--<appender-ref ref="FILE_ERROR"/>-->
    <!--</logger>-->


    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>